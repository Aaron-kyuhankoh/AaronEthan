--- Starting bitbake server pid 777 at 2019-05-16 01:03:02.105853 ---
[1;31mERROR[0m: [31mError parsing configuration files[0m
Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 89, in get_statements
    return cached_statements[absolute_filename]
KeyError: '/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 284, in parseBaseConfiguration
    self.data = self.parseConfigurationFiles(self.prefiles, self.postfiles)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 414, in parseConfigurationFiles
    data = parse_config_file(os.path.join("conf", "bitbake.conf"), data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 179, in wrapped
    return func(fn, *args)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 204, in parse_config_file
    return bb.parse.handle(fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 162, in handle
    statements.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 36, in eval
    statement.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 60, in eval
    bb.parse.ConfHandler.include(self.filename, s, self.lineno, data, False)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 83, in include
    include_single_file(parentfn, fn, lineno, data, error_out)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file
    bb.parse.handle(fn, data, True)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 162, in handle
    statements.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 36, in eval
    statement.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 60, in eval
    bb.parse.ConfHandler.include(self.filename, s, self.lineno, data, False)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 83, in include
    include_single_file(parentfn, fn, lineno, data, error_out)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file
    bb.parse.handle(fn, data, True)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 136, in handle
    statements = get_statements(fn, abs_fn, base_name)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 97, in get_statements
    s = f.readline()
  File "/usr/lib/python3.6/encodings/ascii.py", line 26, in decode
    return codecs.ascii_decode(input, self.errors)[0]
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 2134: ordinal not in range(128)
Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 89, in get_statements
    return cached_statements[absolute_filename]
KeyError: '/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 284, in parseBaseConfiguration
    self.data = self.parseConfigurationFiles(self.prefiles, self.postfiles)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 414, in parseConfigurationFiles
    data = parse_config_file(os.path.join("conf", "bitbake.conf"), data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 179, in wrapped
    return func(fn, *args)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 204, in parse_config_file
    return bb.parse.handle(fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 162, in handle
    statements.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 36, in eval
    statement.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 60, in eval
    bb.parse.ConfHandler.include(self.filename, s, self.lineno, data, False)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 83, in include
    include_single_file(parentfn, fn, lineno, data, error_out)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file
    bb.parse.handle(fn, data, True)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 162, in handle
    statements.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 36, in eval
    statement.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 60, in eval
    bb.parse.ConfHandler.include(self.filename, s, self.lineno, data, False)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 83, in include
    include_single_file(parentfn, fn, lineno, data, error_out)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file
    bb.parse.handle(fn, data, True)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 136, in handle
    statements = get_statements(fn, abs_fn, base_name)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 97, in get_statements
    s = f.readline()
  File "/usr/lib/python3.6/encodings/ascii.py", line 26, in decode
    return codecs.ascii_decode(input, self.errors)[0]
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 2134: ordinal not in range(128)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/daemonize.py", line 83, in createDaemon
    function()
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/server/process.py", line 469, in _startServer
    self.cooker = bb.cooker.BBCooker(self.configuration, self.featureset)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cooker.py", line 210, in __init__
    self.initConfigurationData()
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cooker.py", line 375, in initConfigurationData
    self.databuilder.parseBaseConfiguration()
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 323, in parseBaseConfiguration
    raise bb.BBHandledException
bb.BBHandledException
[1;31mERROR[0m: [31mError parsing configuration files[0m
Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file(parentfn='/projects/jetson-warrior/layers/poky/meta/conf/distro/defaultsetup.conf', fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', lineno=5, data=<bb.data_smart.DataSmart object at 0x7f110999c5f8>, error_out=False):
         try:
    >        bb.parse.handle(fn, data, True)
         except (IOError, OSError) as exc:
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle(fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', data=<bb.data_smart.DataSmart object at 0x7f110999c5f8>, include=True):
                 with data.inchistory.include(fn):
    >                return h['handle'](fn, data, include)
         raise ParseError("not a BitBake file", fn)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 136, in handle(fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', d=<bb.data_smart.DataSmart object at 0x7f110999c5f8>, include=True):
         # actual loading
    >    statements = get_statements(fn, abs_fn, base_name)
     
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 97, in get_statements(filename='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', absolute_filename='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', base_name='maintainers.inc'):
                     lineno = lineno + 1
    >                s = f.readline()
                     if not s: break
  File "/usr/lib/python3.6/encodings/ascii.py", line 26, in IncrementalDecoder.decode(input=b'# Yocto Project / OpenEmbedded-Core (OE-Core) Maintainers File\n#\n# This file contains a list of recipe maintainers.\n#\n# Please submit any patches against recipes in meta to the \n# OE-Core mail list (openembedded-core@lists.openembedded.org)\n# For recipes in meta-yocto please use the Poky list (poky@yoctoproject.org)\n#\n# If you have problems with or questions about a particular recipe, feel\n# free to contact the maintainer directly (cc:ing the appropriate mailing list\n# puts it in the archive and helps other people who might have the same\n# questions in the future), but please try to do the following first:\n#\n#  - look in the Yocto Project Bugzilla\n#    (http://bugzilla.yoctoproject.org/) to see if a problem has\n#    already been reported\n#\n# - look through recent entries of the appropriate mailing list archives\n#   (http://lists.linuxtogo.org/pipermail/openembedded-core or\n#    https://lists.yoctoproject.org/pipermail/poky/) to see if other\n#   people have run into similar problems or had similar questions\n#   answered.\n#\n# The format is as a bitbake variable override for each recipe\n#\n#\tRECIPE_MAINTAINER_pn-<recipe name> = "Full Name <address@domain>"\n#\n# Please keep this list in alphabetical order.\n#\nRECIPE_MAINTAINER_pn-acl = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-acpica = "Fathi Boudra <fathi.boudra@linaro.org>"\nRECIPE_MAINTAINER_pn-acpid = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-adwaita-icon-theme = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-alsa-lib = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-plugins = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-state = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-tools = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-utils = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-utils-scripts = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-apmd = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-apr = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-apr-util = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-apt = "An\xc3\xadbal Lim\xc3\xb3n <limon.anibal@gmail.com>"\nRECIPE_MAINTAINER_pn-apt-native = "An\xc3\xadbal Lim\xc3\xb3n <limon.anibal@gmail.com>"\nRECIPE_MAINTAINER_pn-argp-standalone = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-asciidoc = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-aspell = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-assimp = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-at = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-at-spi2-atk = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-at-spi2-core = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-atk = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-attr = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-autoconf = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-autoconf-archive = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-automake = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-avahi = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-avahi-ui = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-babeltrace = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-base-files = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-base-passwd = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bash = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-bash-completion = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bc = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bind = "Armin Kuster <akuster808@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-cross-${TARGET_ARCH} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-cross-canadian-${TRANSLATED_TARGET_ARCH} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-crosssdk-${SDK_SYS} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-bison = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-bjam-native = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-blktool = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-blktrace = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bluez5 = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bmap-tools = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-boost = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bootchart2 = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bsd-headers = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-btrfs-tools = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-build-appliance-image = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-build-compare = "Paul Eggleton <paul.eggleton@linux.intel.com>"\nRECIPE_MAINTAINER_pn-build-sysroots = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-builder = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-buildtools-tarball = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-busybox = "Andrej Valek <andrej.valek@siemens.com>"\nRECIPE_MAINTAINER_pn-busybox-inittab = "Denys Dmytriyenko <denys@ti.com>"\nRECIPE_MAINTAINER_pn-bzip2 = "Denys Dmytriyenko <denys@ti.com>"\nRECIPE_MAINTAINER_pn-ca-certificates = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-cairo = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-cantarell-fonts = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-ccache = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-cdrtools-native = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chkconfig = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chkconfig-alternatives-native = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chrpath = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-clutter-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-clutter-gst-3.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-clutter-gtk-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-cmake = "Pascal Bach <pascal.bach@siemens.com>"\nRECIPE_MAINTAINER_pn-cmake-native = "Pascal Bach <pascal.bach@siemens.com>"\nRECIPE_MAINTAINER_pn-cogl-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-connman = "Changhyeok Bae <changhyeok.bae@gmail.com>"\nRECIPE_MAINTAINER_pn-connman-conf = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-connman-gnome = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-console-tools = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-consolekit = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-core-image-base = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-dev = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-mtdutils = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-tiny-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-full-cmdline = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-kernel-dev = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-sato = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-sato-sdk = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-lsb = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-lsb-sdk = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-testmaster-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-testmaster = "', final=False):
         def decode(self, input, final=False):
    >        return codecs.ascii_decode(input, self.errors)[0]
     
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 2134: ordinal not in range(128)

ERROR: Error parsing configuration files
Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file(parentfn='/projects/jetson-warrior/layers/poky/meta/conf/distro/defaultsetup.conf', fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', lineno=5, data=<bb.data_smart.DataSmart object at 0x7f110999c5f8>, error_out=False):
         try:
    >        bb.parse.handle(fn, data, True)
         except (IOError, OSError) as exc:
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle(fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', data=<bb.data_smart.DataSmart object at 0x7f110999c5f8>, include=True):
                 with data.inchistory.include(fn):
    >                return h['handle'](fn, data, include)
         raise ParseError("not a BitBake file", fn)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 136, in handle(fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', d=<bb.data_smart.DataSmart object at 0x7f110999c5f8>, include=True):
         # actual loading
    >    statements = get_statements(fn, abs_fn, base_name)
     
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 97, in get_statements(filename='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', absolute_filename='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', base_name='maintainers.inc'):
                     lineno = lineno + 1
    >                s = f.readline()
                     if not s: break
  File "/usr/lib/python3.6/encodings/ascii.py", line 26, in IncrementalDecoder.decode(input=b'# Yocto Project / OpenEmbedded-Core (OE-Core) Maintainers File\n#\n# This file contains a list of recipe maintainers.\n#\n# Please submit any patches against recipes in meta to the \n# OE-Core mail list (openembedded-core@lists.openembedded.org)\n# For recipes in meta-yocto please use the Poky list (poky@yoctoproject.org)\n#\n# If you have problems with or questions about a particular recipe, feel\n# free to contact the maintainer directly (cc:ing the appropriate mailing list\n# puts it in the archive and helps other people who might have the same\n# questions in the future), but please try to do the following first:\n#\n#  - look in the Yocto Project Bugzilla\n#    (http://bugzilla.yoctoproject.org/) to see if a problem has\n#    already been reported\n#\n# - look through recent entries of the appropriate mailing list archives\n#   (http://lists.linuxtogo.org/pipermail/openembedded-core or\n#    https://lists.yoctoproject.org/pipermail/poky/) to see if other\n#   people have run into similar problems or had similar questions\n#   answered.\n#\n# The format is as a bitbake variable override for each recipe\n#\n#\tRECIPE_MAINTAINER_pn-<recipe name> = "Full Name <address@domain>"\n#\n# Please keep this list in alphabetical order.\n#\nRECIPE_MAINTAINER_pn-acl = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-acpica = "Fathi Boudra <fathi.boudra@linaro.org>"\nRECIPE_MAINTAINER_pn-acpid = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-adwaita-icon-theme = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-alsa-lib = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-plugins = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-state = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-tools = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-utils = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-utils-scripts = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-apmd = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-apr = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-apr-util = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-apt = "An\xc3\xadbal Lim\xc3\xb3n <limon.anibal@gmail.com>"\nRECIPE_MAINTAINER_pn-apt-native = "An\xc3\xadbal Lim\xc3\xb3n <limon.anibal@gmail.com>"\nRECIPE_MAINTAINER_pn-argp-standalone = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-asciidoc = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-aspell = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-assimp = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-at = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-at-spi2-atk = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-at-spi2-core = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-atk = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-attr = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-autoconf = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-autoconf-archive = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-automake = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-avahi = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-avahi-ui = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-babeltrace = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-base-files = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-base-passwd = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bash = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-bash-completion = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bc = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bind = "Armin Kuster <akuster808@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-cross-${TARGET_ARCH} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-cross-canadian-${TRANSLATED_TARGET_ARCH} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-crosssdk-${SDK_SYS} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-bison = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-bjam-native = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-blktool = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-blktrace = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bluez5 = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bmap-tools = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-boost = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bootchart2 = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bsd-headers = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-btrfs-tools = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-build-appliance-image = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-build-compare = "Paul Eggleton <paul.eggleton@linux.intel.com>"\nRECIPE_MAINTAINER_pn-build-sysroots = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-builder = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-buildtools-tarball = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-busybox = "Andrej Valek <andrej.valek@siemens.com>"\nRECIPE_MAINTAINER_pn-busybox-inittab = "Denys Dmytriyenko <denys@ti.com>"\nRECIPE_MAINTAINER_pn-bzip2 = "Denys Dmytriyenko <denys@ti.com>"\nRECIPE_MAINTAINER_pn-ca-certificates = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-cairo = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-cantarell-fonts = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-ccache = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-cdrtools-native = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chkconfig = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chkconfig-alternatives-native = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chrpath = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-clutter-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-clutter-gst-3.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-clutter-gtk-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-cmake = "Pascal Bach <pascal.bach@siemens.com>"\nRECIPE_MAINTAINER_pn-cmake-native = "Pascal Bach <pascal.bach@siemens.com>"\nRECIPE_MAINTAINER_pn-cogl-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-connman = "Changhyeok Bae <changhyeok.bae@gmail.com>"\nRECIPE_MAINTAINER_pn-connman-conf = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-connman-gnome = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-console-tools = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-consolekit = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-core-image-base = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-dev = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-mtdutils = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-tiny-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-full-cmdline = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-kernel-dev = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-sato = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-sato-sdk = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-lsb = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-lsb-sdk = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-testmaster-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-testmaster = "', final=False):
         def decode(self, input, final=False):
    >        return codecs.ascii_decode(input, self.errors)[0]
     
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 2134: ordinal not in range(128)

--- Starting bitbake server pid 794 at 2019-05-16 01:04:00.097231 ---
[1;31mERROR[0m: [31mError parsing configuration files[0m
Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 89, in get_statements
    return cached_statements[absolute_filename]
KeyError: '/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 284, in parseBaseConfiguration
    self.data = self.parseConfigurationFiles(self.prefiles, self.postfiles)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 414, in parseConfigurationFiles
    data = parse_config_file(os.path.join("conf", "bitbake.conf"), data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 179, in wrapped
    return func(fn, *args)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 204, in parse_config_file
    return bb.parse.handle(fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 162, in handle
    statements.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 36, in eval
    statement.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 60, in eval
    bb.parse.ConfHandler.include(self.filename, s, self.lineno, data, False)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 83, in include
    include_single_file(parentfn, fn, lineno, data, error_out)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file
    bb.parse.handle(fn, data, True)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 162, in handle
    statements.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 36, in eval
    statement.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 60, in eval
    bb.parse.ConfHandler.include(self.filename, s, self.lineno, data, False)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 83, in include
    include_single_file(parentfn, fn, lineno, data, error_out)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file
    bb.parse.handle(fn, data, True)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 136, in handle
    statements = get_statements(fn, abs_fn, base_name)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 97, in get_statements
    s = f.readline()
  File "/usr/lib/python3.6/encodings/ascii.py", line 26, in decode
    return codecs.ascii_decode(input, self.errors)[0]
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 2134: ordinal not in range(128)
Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 89, in get_statements
    return cached_statements[absolute_filename]
KeyError: '/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 284, in parseBaseConfiguration
    self.data = self.parseConfigurationFiles(self.prefiles, self.postfiles)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 414, in parseConfigurationFiles
    data = parse_config_file(os.path.join("conf", "bitbake.conf"), data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 179, in wrapped
    return func(fn, *args)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 204, in parse_config_file
    return bb.parse.handle(fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 162, in handle
    statements.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 36, in eval
    statement.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 60, in eval
    bb.parse.ConfHandler.include(self.filename, s, self.lineno, data, False)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 83, in include
    include_single_file(parentfn, fn, lineno, data, error_out)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file
    bb.parse.handle(fn, data, True)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 162, in handle
    statements.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 36, in eval
    statement.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 60, in eval
    bb.parse.ConfHandler.include(self.filename, s, self.lineno, data, False)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 83, in include
    include_single_file(parentfn, fn, lineno, data, error_out)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file
    bb.parse.handle(fn, data, True)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 136, in handle
    statements = get_statements(fn, abs_fn, base_name)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 97, in get_statements
    s = f.readline()
  File "/usr/lib/python3.6/encodings/ascii.py", line 26, in decode
    return codecs.ascii_decode(input, self.errors)[0]
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 2134: ordinal not in range(128)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/daemonize.py", line 83, in createDaemon
    function()
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/server/process.py", line 469, in _startServer
    self.cooker = bb.cooker.BBCooker(self.configuration, self.featureset)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cooker.py", line 210, in __init__
    self.initConfigurationData()
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cooker.py", line 375, in initConfigurationData
    self.databuilder.parseBaseConfiguration()
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 323, in parseBaseConfiguration
    raise bb.BBHandledException
bb.BBHandledException
[1;31mERROR[0m: [31mError parsing configuration files[0m
Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file(parentfn='/projects/jetson-warrior/layers/poky/meta/conf/distro/defaultsetup.conf', fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', lineno=5, data=<bb.data_smart.DataSmart object at 0x7f2992965588>, error_out=False):
         try:
    >        bb.parse.handle(fn, data, True)
         except (IOError, OSError) as exc:
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle(fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', data=<bb.data_smart.DataSmart object at 0x7f2992965588>, include=True):
                 with data.inchistory.include(fn):
    >                return h['handle'](fn, data, include)
         raise ParseError("not a BitBake file", fn)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 136, in handle(fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', d=<bb.data_smart.DataSmart object at 0x7f2992965588>, include=True):
         # actual loading
    >    statements = get_statements(fn, abs_fn, base_name)
     
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 97, in get_statements(filename='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', absolute_filename='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', base_name='maintainers.inc'):
                     lineno = lineno + 1
    >                s = f.readline()
                     if not s: break
  File "/usr/lib/python3.6/encodings/ascii.py", line 26, in IncrementalDecoder.decode(input=b'# Yocto Project / OpenEmbedded-Core (OE-Core) Maintainers File\n#\n# This file contains a list of recipe maintainers.\n#\n# Please submit any patches against recipes in meta to the \n# OE-Core mail list (openembedded-core@lists.openembedded.org)\n# For recipes in meta-yocto please use the Poky list (poky@yoctoproject.org)\n#\n# If you have problems with or questions about a particular recipe, feel\n# free to contact the maintainer directly (cc:ing the appropriate mailing list\n# puts it in the archive and helps other people who might have the same\n# questions in the future), but please try to do the following first:\n#\n#  - look in the Yocto Project Bugzilla\n#    (http://bugzilla.yoctoproject.org/) to see if a problem has\n#    already been reported\n#\n# - look through recent entries of the appropriate mailing list archives\n#   (http://lists.linuxtogo.org/pipermail/openembedded-core or\n#    https://lists.yoctoproject.org/pipermail/poky/) to see if other\n#   people have run into similar problems or had similar questions\n#   answered.\n#\n# The format is as a bitbake variable override for each recipe\n#\n#\tRECIPE_MAINTAINER_pn-<recipe name> = "Full Name <address@domain>"\n#\n# Please keep this list in alphabetical order.\n#\nRECIPE_MAINTAINER_pn-acl = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-acpica = "Fathi Boudra <fathi.boudra@linaro.org>"\nRECIPE_MAINTAINER_pn-acpid = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-adwaita-icon-theme = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-alsa-lib = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-plugins = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-state = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-tools = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-utils = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-utils-scripts = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-apmd = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-apr = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-apr-util = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-apt = "An\xc3\xadbal Lim\xc3\xb3n <limon.anibal@gmail.com>"\nRECIPE_MAINTAINER_pn-apt-native = "An\xc3\xadbal Lim\xc3\xb3n <limon.anibal@gmail.com>"\nRECIPE_MAINTAINER_pn-argp-standalone = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-asciidoc = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-aspell = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-assimp = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-at = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-at-spi2-atk = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-at-spi2-core = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-atk = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-attr = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-autoconf = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-autoconf-archive = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-automake = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-avahi = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-avahi-ui = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-babeltrace = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-base-files = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-base-passwd = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bash = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-bash-completion = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bc = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bind = "Armin Kuster <akuster808@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-cross-${TARGET_ARCH} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-cross-canadian-${TRANSLATED_TARGET_ARCH} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-crosssdk-${SDK_SYS} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-bison = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-bjam-native = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-blktool = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-blktrace = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bluez5 = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bmap-tools = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-boost = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bootchart2 = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bsd-headers = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-btrfs-tools = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-build-appliance-image = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-build-compare = "Paul Eggleton <paul.eggleton@linux.intel.com>"\nRECIPE_MAINTAINER_pn-build-sysroots = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-builder = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-buildtools-tarball = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-busybox = "Andrej Valek <andrej.valek@siemens.com>"\nRECIPE_MAINTAINER_pn-busybox-inittab = "Denys Dmytriyenko <denys@ti.com>"\nRECIPE_MAINTAINER_pn-bzip2 = "Denys Dmytriyenko <denys@ti.com>"\nRECIPE_MAINTAINER_pn-ca-certificates = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-cairo = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-cantarell-fonts = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-ccache = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-cdrtools-native = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chkconfig = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chkconfig-alternatives-native = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chrpath = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-clutter-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-clutter-gst-3.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-clutter-gtk-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-cmake = "Pascal Bach <pascal.bach@siemens.com>"\nRECIPE_MAINTAINER_pn-cmake-native = "Pascal Bach <pascal.bach@siemens.com>"\nRECIPE_MAINTAINER_pn-cogl-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-connman = "Changhyeok Bae <changhyeok.bae@gmail.com>"\nRECIPE_MAINTAINER_pn-connman-conf = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-connman-gnome = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-console-tools = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-consolekit = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-core-image-base = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-dev = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-mtdutils = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-tiny-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-full-cmdline = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-kernel-dev = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-sato = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-sato-sdk = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-lsb = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-lsb-sdk = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-testmaster-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-testmaster = "', final=False):
         def decode(self, input, final=False):
    >        return codecs.ascii_decode(input, self.errors)[0]
     
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 2134: ordinal not in range(128)

ERROR: Error parsing configuration files
Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file(parentfn='/projects/jetson-warrior/layers/poky/meta/conf/distro/defaultsetup.conf', fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', lineno=5, data=<bb.data_smart.DataSmart object at 0x7f2992965588>, error_out=False):
         try:
    >        bb.parse.handle(fn, data, True)
         except (IOError, OSError) as exc:
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle(fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', data=<bb.data_smart.DataSmart object at 0x7f2992965588>, include=True):
                 with data.inchistory.include(fn):
    >                return h['handle'](fn, data, include)
         raise ParseError("not a BitBake file", fn)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 136, in handle(fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', d=<bb.data_smart.DataSmart object at 0x7f2992965588>, include=True):
         # actual loading
    >    statements = get_statements(fn, abs_fn, base_name)
     
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 97, in get_statements(filename='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', absolute_filename='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', base_name='maintainers.inc'):
                     lineno = lineno + 1
    >                s = f.readline()
                     if not s: break
  File "/usr/lib/python3.6/encodings/ascii.py", line 26, in IncrementalDecoder.decode(input=b'# Yocto Project / OpenEmbedded-Core (OE-Core) Maintainers File\n#\n# This file contains a list of recipe maintainers.\n#\n# Please submit any patches against recipes in meta to the \n# OE-Core mail list (openembedded-core@lists.openembedded.org)\n# For recipes in meta-yocto please use the Poky list (poky@yoctoproject.org)\n#\n# If you have problems with or questions about a particular recipe, feel\n# free to contact the maintainer directly (cc:ing the appropriate mailing list\n# puts it in the archive and helps other people who might have the same\n# questions in the future), but please try to do the following first:\n#\n#  - look in the Yocto Project Bugzilla\n#    (http://bugzilla.yoctoproject.org/) to see if a problem has\n#    already been reported\n#\n# - look through recent entries of the appropriate mailing list archives\n#   (http://lists.linuxtogo.org/pipermail/openembedded-core or\n#    https://lists.yoctoproject.org/pipermail/poky/) to see if other\n#   people have run into similar problems or had similar questions\n#   answered.\n#\n# The format is as a bitbake variable override for each recipe\n#\n#\tRECIPE_MAINTAINER_pn-<recipe name> = "Full Name <address@domain>"\n#\n# Please keep this list in alphabetical order.\n#\nRECIPE_MAINTAINER_pn-acl = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-acpica = "Fathi Boudra <fathi.boudra@linaro.org>"\nRECIPE_MAINTAINER_pn-acpid = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-adwaita-icon-theme = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-alsa-lib = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-plugins = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-state = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-tools = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-utils = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-utils-scripts = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-apmd = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-apr = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-apr-util = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-apt = "An\xc3\xadbal Lim\xc3\xb3n <limon.anibal@gmail.com>"\nRECIPE_MAINTAINER_pn-apt-native = "An\xc3\xadbal Lim\xc3\xb3n <limon.anibal@gmail.com>"\nRECIPE_MAINTAINER_pn-argp-standalone = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-asciidoc = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-aspell = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-assimp = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-at = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-at-spi2-atk = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-at-spi2-core = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-atk = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-attr = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-autoconf = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-autoconf-archive = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-automake = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-avahi = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-avahi-ui = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-babeltrace = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-base-files = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-base-passwd = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bash = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-bash-completion = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bc = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bind = "Armin Kuster <akuster808@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-cross-${TARGET_ARCH} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-cross-canadian-${TRANSLATED_TARGET_ARCH} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-crosssdk-${SDK_SYS} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-bison = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-bjam-native = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-blktool = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-blktrace = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bluez5 = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bmap-tools = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-boost = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bootchart2 = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bsd-headers = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-btrfs-tools = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-build-appliance-image = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-build-compare = "Paul Eggleton <paul.eggleton@linux.intel.com>"\nRECIPE_MAINTAINER_pn-build-sysroots = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-builder = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-buildtools-tarball = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-busybox = "Andrej Valek <andrej.valek@siemens.com>"\nRECIPE_MAINTAINER_pn-busybox-inittab = "Denys Dmytriyenko <denys@ti.com>"\nRECIPE_MAINTAINER_pn-bzip2 = "Denys Dmytriyenko <denys@ti.com>"\nRECIPE_MAINTAINER_pn-ca-certificates = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-cairo = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-cantarell-fonts = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-ccache = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-cdrtools-native = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chkconfig = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chkconfig-alternatives-native = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chrpath = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-clutter-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-clutter-gst-3.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-clutter-gtk-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-cmake = "Pascal Bach <pascal.bach@siemens.com>"\nRECIPE_MAINTAINER_pn-cmake-native = "Pascal Bach <pascal.bach@siemens.com>"\nRECIPE_MAINTAINER_pn-cogl-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-connman = "Changhyeok Bae <changhyeok.bae@gmail.com>"\nRECIPE_MAINTAINER_pn-connman-conf = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-connman-gnome = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-console-tools = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-consolekit = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-core-image-base = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-dev = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-mtdutils = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-tiny-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-full-cmdline = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-kernel-dev = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-sato = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-sato-sdk = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-lsb = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-lsb-sdk = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-testmaster-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-testmaster = "', final=False):
         def decode(self, input, final=False):
    >        return codecs.ascii_decode(input, self.errors)[0]
     
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 2134: ordinal not in range(128)

--- Starting bitbake server pid 801 at 2019-05-16 01:04:08.398499 ---
[1;31mERROR[0m: [31mError parsing configuration files[0m
Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 89, in get_statements
    return cached_statements[absolute_filename]
KeyError: '/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 284, in parseBaseConfiguration
    self.data = self.parseConfigurationFiles(self.prefiles, self.postfiles)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 414, in parseConfigurationFiles
    data = parse_config_file(os.path.join("conf", "bitbake.conf"), data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 179, in wrapped
    return func(fn, *args)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 204, in parse_config_file
    return bb.parse.handle(fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 162, in handle
    statements.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 36, in eval
    statement.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 60, in eval
    bb.parse.ConfHandler.include(self.filename, s, self.lineno, data, False)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 83, in include
    include_single_file(parentfn, fn, lineno, data, error_out)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file
    bb.parse.handle(fn, data, True)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 162, in handle
    statements.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 36, in eval
    statement.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 60, in eval
    bb.parse.ConfHandler.include(self.filename, s, self.lineno, data, False)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 83, in include
    include_single_file(parentfn, fn, lineno, data, error_out)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file
    bb.parse.handle(fn, data, True)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 136, in handle
    statements = get_statements(fn, abs_fn, base_name)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 97, in get_statements
    s = f.readline()
  File "/usr/lib/python3.6/encodings/ascii.py", line 26, in decode
    return codecs.ascii_decode(input, self.errors)[0]
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 2134: ordinal not in range(128)
Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 89, in get_statements
    return cached_statements[absolute_filename]
KeyError: '/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 284, in parseBaseConfiguration
    self.data = self.parseConfigurationFiles(self.prefiles, self.postfiles)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 414, in parseConfigurationFiles
    data = parse_config_file(os.path.join("conf", "bitbake.conf"), data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 179, in wrapped
    return func(fn, *args)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 204, in parse_config_file
    return bb.parse.handle(fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 162, in handle
    statements.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 36, in eval
    statement.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 60, in eval
    bb.parse.ConfHandler.include(self.filename, s, self.lineno, data, False)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 83, in include
    include_single_file(parentfn, fn, lineno, data, error_out)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file
    bb.parse.handle(fn, data, True)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 162, in handle
    statements.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 36, in eval
    statement.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 60, in eval
    bb.parse.ConfHandler.include(self.filename, s, self.lineno, data, False)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 83, in include
    include_single_file(parentfn, fn, lineno, data, error_out)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file
    bb.parse.handle(fn, data, True)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 136, in handle
    statements = get_statements(fn, abs_fn, base_name)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 97, in get_statements
    s = f.readline()
  File "/usr/lib/python3.6/encodings/ascii.py", line 26, in decode
    return codecs.ascii_decode(input, self.errors)[0]
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 2134: ordinal not in range(128)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/daemonize.py", line 83, in createDaemon
    function()
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/server/process.py", line 469, in _startServer
    self.cooker = bb.cooker.BBCooker(self.configuration, self.featureset)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cooker.py", line 210, in __init__
    self.initConfigurationData()
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cooker.py", line 375, in initConfigurationData
    self.databuilder.parseBaseConfiguration()
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 323, in parseBaseConfiguration
    raise bb.BBHandledException
bb.BBHandledException
[1;31mERROR[0m: [31mError parsing configuration files[0m
Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file(parentfn='/projects/jetson-warrior/layers/poky/meta/conf/distro/defaultsetup.conf', fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', lineno=5, data=<bb.data_smart.DataSmart object at 0x7ff1b9ac5588>, error_out=False):
         try:
    >        bb.parse.handle(fn, data, True)
         except (IOError, OSError) as exc:
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle(fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', data=<bb.data_smart.DataSmart object at 0x7ff1b9ac5588>, include=True):
                 with data.inchistory.include(fn):
    >                return h['handle'](fn, data, include)
         raise ParseError("not a BitBake file", fn)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 136, in handle(fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', d=<bb.data_smart.DataSmart object at 0x7ff1b9ac5588>, include=True):
         # actual loading
    >    statements = get_statements(fn, abs_fn, base_name)
     
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 97, in get_statements(filename='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', absolute_filename='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', base_name='maintainers.inc'):
                     lineno = lineno + 1
    >                s = f.readline()
                     if not s: break
  File "/usr/lib/python3.6/encodings/ascii.py", line 26, in IncrementalDecoder.decode(input=b'# Yocto Project / OpenEmbedded-Core (OE-Core) Maintainers File\n#\n# This file contains a list of recipe maintainers.\n#\n# Please submit any patches against recipes in meta to the \n# OE-Core mail list (openembedded-core@lists.openembedded.org)\n# For recipes in meta-yocto please use the Poky list (poky@yoctoproject.org)\n#\n# If you have problems with or questions about a particular recipe, feel\n# free to contact the maintainer directly (cc:ing the appropriate mailing list\n# puts it in the archive and helps other people who might have the same\n# questions in the future), but please try to do the following first:\n#\n#  - look in the Yocto Project Bugzilla\n#    (http://bugzilla.yoctoproject.org/) to see if a problem has\n#    already been reported\n#\n# - look through recent entries of the appropriate mailing list archives\n#   (http://lists.linuxtogo.org/pipermail/openembedded-core or\n#    https://lists.yoctoproject.org/pipermail/poky/) to see if other\n#   people have run into similar problems or had similar questions\n#   answered.\n#\n# The format is as a bitbake variable override for each recipe\n#\n#\tRECIPE_MAINTAINER_pn-<recipe name> = "Full Name <address@domain>"\n#\n# Please keep this list in alphabetical order.\n#\nRECIPE_MAINTAINER_pn-acl = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-acpica = "Fathi Boudra <fathi.boudra@linaro.org>"\nRECIPE_MAINTAINER_pn-acpid = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-adwaita-icon-theme = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-alsa-lib = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-plugins = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-state = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-tools = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-utils = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-utils-scripts = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-apmd = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-apr = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-apr-util = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-apt = "An\xc3\xadbal Lim\xc3\xb3n <limon.anibal@gmail.com>"\nRECIPE_MAINTAINER_pn-apt-native = "An\xc3\xadbal Lim\xc3\xb3n <limon.anibal@gmail.com>"\nRECIPE_MAINTAINER_pn-argp-standalone = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-asciidoc = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-aspell = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-assimp = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-at = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-at-spi2-atk = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-at-spi2-core = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-atk = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-attr = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-autoconf = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-autoconf-archive = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-automake = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-avahi = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-avahi-ui = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-babeltrace = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-base-files = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-base-passwd = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bash = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-bash-completion = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bc = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bind = "Armin Kuster <akuster808@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-cross-${TARGET_ARCH} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-cross-canadian-${TRANSLATED_TARGET_ARCH} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-crosssdk-${SDK_SYS} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-bison = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-bjam-native = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-blktool = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-blktrace = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bluez5 = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bmap-tools = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-boost = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bootchart2 = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bsd-headers = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-btrfs-tools = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-build-appliance-image = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-build-compare = "Paul Eggleton <paul.eggleton@linux.intel.com>"\nRECIPE_MAINTAINER_pn-build-sysroots = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-builder = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-buildtools-tarball = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-busybox = "Andrej Valek <andrej.valek@siemens.com>"\nRECIPE_MAINTAINER_pn-busybox-inittab = "Denys Dmytriyenko <denys@ti.com>"\nRECIPE_MAINTAINER_pn-bzip2 = "Denys Dmytriyenko <denys@ti.com>"\nRECIPE_MAINTAINER_pn-ca-certificates = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-cairo = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-cantarell-fonts = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-ccache = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-cdrtools-native = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chkconfig = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chkconfig-alternatives-native = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chrpath = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-clutter-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-clutter-gst-3.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-clutter-gtk-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-cmake = "Pascal Bach <pascal.bach@siemens.com>"\nRECIPE_MAINTAINER_pn-cmake-native = "Pascal Bach <pascal.bach@siemens.com>"\nRECIPE_MAINTAINER_pn-cogl-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-connman = "Changhyeok Bae <changhyeok.bae@gmail.com>"\nRECIPE_MAINTAINER_pn-connman-conf = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-connman-gnome = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-console-tools = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-consolekit = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-core-image-base = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-dev = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-mtdutils = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-tiny-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-full-cmdline = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-kernel-dev = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-sato = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-sato-sdk = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-lsb = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-lsb-sdk = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-testmaster-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-testmaster = "', final=False):
         def decode(self, input, final=False):
    >        return codecs.ascii_decode(input, self.errors)[0]
     
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 2134: ordinal not in range(128)

ERROR: Error parsing configuration files
Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file(parentfn='/projects/jetson-warrior/layers/poky/meta/conf/distro/defaultsetup.conf', fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', lineno=5, data=<bb.data_smart.DataSmart object at 0x7ff1b9ac5588>, error_out=False):
         try:
    >        bb.parse.handle(fn, data, True)
         except (IOError, OSError) as exc:
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle(fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', data=<bb.data_smart.DataSmart object at 0x7ff1b9ac5588>, include=True):
                 with data.inchistory.include(fn):
    >                return h['handle'](fn, data, include)
         raise ParseError("not a BitBake file", fn)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 136, in handle(fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', d=<bb.data_smart.DataSmart object at 0x7ff1b9ac5588>, include=True):
         # actual loading
    >    statements = get_statements(fn, abs_fn, base_name)
     
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 97, in get_statements(filename='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', absolute_filename='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', base_name='maintainers.inc'):
                     lineno = lineno + 1
    >                s = f.readline()
                     if not s: break
  File "/usr/lib/python3.6/encodings/ascii.py", line 26, in IncrementalDecoder.decode(input=b'# Yocto Project / OpenEmbedded-Core (OE-Core) Maintainers File\n#\n# This file contains a list of recipe maintainers.\n#\n# Please submit any patches against recipes in meta to the \n# OE-Core mail list (openembedded-core@lists.openembedded.org)\n# For recipes in meta-yocto please use the Poky list (poky@yoctoproject.org)\n#\n# If you have problems with or questions about a particular recipe, feel\n# free to contact the maintainer directly (cc:ing the appropriate mailing list\n# puts it in the archive and helps other people who might have the same\n# questions in the future), but please try to do the following first:\n#\n#  - look in the Yocto Project Bugzilla\n#    (http://bugzilla.yoctoproject.org/) to see if a problem has\n#    already been reported\n#\n# - look through recent entries of the appropriate mailing list archives\n#   (http://lists.linuxtogo.org/pipermail/openembedded-core or\n#    https://lists.yoctoproject.org/pipermail/poky/) to see if other\n#   people have run into similar problems or had similar questions\n#   answered.\n#\n# The format is as a bitbake variable override for each recipe\n#\n#\tRECIPE_MAINTAINER_pn-<recipe name> = "Full Name <address@domain>"\n#\n# Please keep this list in alphabetical order.\n#\nRECIPE_MAINTAINER_pn-acl = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-acpica = "Fathi Boudra <fathi.boudra@linaro.org>"\nRECIPE_MAINTAINER_pn-acpid = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-adwaita-icon-theme = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-alsa-lib = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-plugins = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-state = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-tools = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-utils = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-utils-scripts = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-apmd = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-apr = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-apr-util = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-apt = "An\xc3\xadbal Lim\xc3\xb3n <limon.anibal@gmail.com>"\nRECIPE_MAINTAINER_pn-apt-native = "An\xc3\xadbal Lim\xc3\xb3n <limon.anibal@gmail.com>"\nRECIPE_MAINTAINER_pn-argp-standalone = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-asciidoc = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-aspell = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-assimp = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-at = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-at-spi2-atk = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-at-spi2-core = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-atk = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-attr = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-autoconf = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-autoconf-archive = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-automake = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-avahi = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-avahi-ui = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-babeltrace = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-base-files = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-base-passwd = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bash = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-bash-completion = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bc = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bind = "Armin Kuster <akuster808@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-cross-${TARGET_ARCH} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-cross-canadian-${TRANSLATED_TARGET_ARCH} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-crosssdk-${SDK_SYS} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-bison = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-bjam-native = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-blktool = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-blktrace = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bluez5 = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bmap-tools = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-boost = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bootchart2 = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bsd-headers = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-btrfs-tools = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-build-appliance-image = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-build-compare = "Paul Eggleton <paul.eggleton@linux.intel.com>"\nRECIPE_MAINTAINER_pn-build-sysroots = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-builder = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-buildtools-tarball = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-busybox = "Andrej Valek <andrej.valek@siemens.com>"\nRECIPE_MAINTAINER_pn-busybox-inittab = "Denys Dmytriyenko <denys@ti.com>"\nRECIPE_MAINTAINER_pn-bzip2 = "Denys Dmytriyenko <denys@ti.com>"\nRECIPE_MAINTAINER_pn-ca-certificates = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-cairo = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-cantarell-fonts = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-ccache = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-cdrtools-native = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chkconfig = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chkconfig-alternatives-native = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chrpath = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-clutter-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-clutter-gst-3.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-clutter-gtk-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-cmake = "Pascal Bach <pascal.bach@siemens.com>"\nRECIPE_MAINTAINER_pn-cmake-native = "Pascal Bach <pascal.bach@siemens.com>"\nRECIPE_MAINTAINER_pn-cogl-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-connman = "Changhyeok Bae <changhyeok.bae@gmail.com>"\nRECIPE_MAINTAINER_pn-connman-conf = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-connman-gnome = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-console-tools = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-consolekit = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-core-image-base = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-dev = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-mtdutils = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-tiny-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-full-cmdline = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-kernel-dev = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-sato = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-sato-sdk = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-lsb = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-lsb-sdk = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-testmaster-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-testmaster = "', final=False):
         def decode(self, input, final=False):
    >        return codecs.ascii_decode(input, self.errors)[0]
     
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 2134: ordinal not in range(128)

--- Starting bitbake server pid 810 at 2019-05-16 01:04:28.955108 ---
[1;31mERROR[0m: [31mError parsing configuration files[0m
Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 89, in get_statements
    return cached_statements[absolute_filename]
KeyError: '/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 284, in parseBaseConfiguration
    self.data = self.parseConfigurationFiles(self.prefiles, self.postfiles)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 414, in parseConfigurationFiles
    data = parse_config_file(os.path.join("conf", "bitbake.conf"), data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 179, in wrapped
    return func(fn, *args)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 204, in parse_config_file
    return bb.parse.handle(fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 162, in handle
    statements.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 36, in eval
    statement.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 60, in eval
    bb.parse.ConfHandler.include(self.filename, s, self.lineno, data, False)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 83, in include
    include_single_file(parentfn, fn, lineno, data, error_out)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file
    bb.parse.handle(fn, data, True)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 162, in handle
    statements.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 36, in eval
    statement.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 60, in eval
    bb.parse.ConfHandler.include(self.filename, s, self.lineno, data, False)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 83, in include
    include_single_file(parentfn, fn, lineno, data, error_out)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file
    bb.parse.handle(fn, data, True)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 136, in handle
    statements = get_statements(fn, abs_fn, base_name)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 97, in get_statements
    s = f.readline()
  File "/usr/lib/python3.6/encodings/ascii.py", line 26, in decode
    return codecs.ascii_decode(input, self.errors)[0]
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 2134: ordinal not in range(128)
Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 89, in get_statements
    return cached_statements[absolute_filename]
KeyError: '/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 284, in parseBaseConfiguration
    self.data = self.parseConfigurationFiles(self.prefiles, self.postfiles)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 414, in parseConfigurationFiles
    data = parse_config_file(os.path.join("conf", "bitbake.conf"), data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 179, in wrapped
    return func(fn, *args)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 204, in parse_config_file
    return bb.parse.handle(fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 162, in handle
    statements.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 36, in eval
    statement.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 60, in eval
    bb.parse.ConfHandler.include(self.filename, s, self.lineno, data, False)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 83, in include
    include_single_file(parentfn, fn, lineno, data, error_out)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file
    bb.parse.handle(fn, data, True)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 162, in handle
    statements.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 36, in eval
    statement.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 60, in eval
    bb.parse.ConfHandler.include(self.filename, s, self.lineno, data, False)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 83, in include
    include_single_file(parentfn, fn, lineno, data, error_out)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file
    bb.parse.handle(fn, data, True)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 136, in handle
    statements = get_statements(fn, abs_fn, base_name)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 97, in get_statements
    s = f.readline()
  File "/usr/lib/python3.6/encodings/ascii.py", line 26, in decode
    return codecs.ascii_decode(input, self.errors)[0]
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 2134: ordinal not in range(128)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/daemonize.py", line 83, in createDaemon
    function()
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/server/process.py", line 469, in _startServer
    self.cooker = bb.cooker.BBCooker(self.configuration, self.featureset)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cooker.py", line 210, in __init__
    self.initConfigurationData()
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cooker.py", line 375, in initConfigurationData
    self.databuilder.parseBaseConfiguration()
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 323, in parseBaseConfiguration
    raise bb.BBHandledException
bb.BBHandledException
[1;31mERROR[0m: [31mError parsing configuration files[0m
Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file(parentfn='/projects/jetson-warrior/layers/poky/meta/conf/distro/defaultsetup.conf', fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', lineno=5, data=<bb.data_smart.DataSmart object at 0x7fac76d4f518>, error_out=False):
         try:
    >        bb.parse.handle(fn, data, True)
         except (IOError, OSError) as exc:
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle(fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', data=<bb.data_smart.DataSmart object at 0x7fac76d4f518>, include=True):
                 with data.inchistory.include(fn):
    >                return h['handle'](fn, data, include)
         raise ParseError("not a BitBake file", fn)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 136, in handle(fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', d=<bb.data_smart.DataSmart object at 0x7fac76d4f518>, include=True):
         # actual loading
    >    statements = get_statements(fn, abs_fn, base_name)
     
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 97, in get_statements(filename='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', absolute_filename='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', base_name='maintainers.inc'):
                     lineno = lineno + 1
    >                s = f.readline()
                     if not s: break
  File "/usr/lib/python3.6/encodings/ascii.py", line 26, in IncrementalDecoder.decode(input=b'# Yocto Project / OpenEmbedded-Core (OE-Core) Maintainers File\n#\n# This file contains a list of recipe maintainers.\n#\n# Please submit any patches against recipes in meta to the \n# OE-Core mail list (openembedded-core@lists.openembedded.org)\n# For recipes in meta-yocto please use the Poky list (poky@yoctoproject.org)\n#\n# If you have problems with or questions about a particular recipe, feel\n# free to contact the maintainer directly (cc:ing the appropriate mailing list\n# puts it in the archive and helps other people who might have the same\n# questions in the future), but please try to do the following first:\n#\n#  - look in the Yocto Project Bugzilla\n#    (http://bugzilla.yoctoproject.org/) to see if a problem has\n#    already been reported\n#\n# - look through recent entries of the appropriate mailing list archives\n#   (http://lists.linuxtogo.org/pipermail/openembedded-core or\n#    https://lists.yoctoproject.org/pipermail/poky/) to see if other\n#   people have run into similar problems or had similar questions\n#   answered.\n#\n# The format is as a bitbake variable override for each recipe\n#\n#\tRECIPE_MAINTAINER_pn-<recipe name> = "Full Name <address@domain>"\n#\n# Please keep this list in alphabetical order.\n#\nRECIPE_MAINTAINER_pn-acl = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-acpica = "Fathi Boudra <fathi.boudra@linaro.org>"\nRECIPE_MAINTAINER_pn-acpid = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-adwaita-icon-theme = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-alsa-lib = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-plugins = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-state = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-tools = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-utils = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-utils-scripts = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-apmd = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-apr = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-apr-util = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-apt = "An\xc3\xadbal Lim\xc3\xb3n <limon.anibal@gmail.com>"\nRECIPE_MAINTAINER_pn-apt-native = "An\xc3\xadbal Lim\xc3\xb3n <limon.anibal@gmail.com>"\nRECIPE_MAINTAINER_pn-argp-standalone = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-asciidoc = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-aspell = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-assimp = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-at = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-at-spi2-atk = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-at-spi2-core = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-atk = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-attr = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-autoconf = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-autoconf-archive = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-automake = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-avahi = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-avahi-ui = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-babeltrace = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-base-files = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-base-passwd = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bash = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-bash-completion = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bc = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bind = "Armin Kuster <akuster808@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-cross-${TARGET_ARCH} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-cross-canadian-${TRANSLATED_TARGET_ARCH} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-crosssdk-${SDK_SYS} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-bison = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-bjam-native = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-blktool = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-blktrace = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bluez5 = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bmap-tools = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-boost = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bootchart2 = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bsd-headers = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-btrfs-tools = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-build-appliance-image = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-build-compare = "Paul Eggleton <paul.eggleton@linux.intel.com>"\nRECIPE_MAINTAINER_pn-build-sysroots = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-builder = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-buildtools-tarball = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-busybox = "Andrej Valek <andrej.valek@siemens.com>"\nRECIPE_MAINTAINER_pn-busybox-inittab = "Denys Dmytriyenko <denys@ti.com>"\nRECIPE_MAINTAINER_pn-bzip2 = "Denys Dmytriyenko <denys@ti.com>"\nRECIPE_MAINTAINER_pn-ca-certificates = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-cairo = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-cantarell-fonts = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-ccache = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-cdrtools-native = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chkconfig = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chkconfig-alternatives-native = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chrpath = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-clutter-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-clutter-gst-3.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-clutter-gtk-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-cmake = "Pascal Bach <pascal.bach@siemens.com>"\nRECIPE_MAINTAINER_pn-cmake-native = "Pascal Bach <pascal.bach@siemens.com>"\nRECIPE_MAINTAINER_pn-cogl-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-connman = "Changhyeok Bae <changhyeok.bae@gmail.com>"\nRECIPE_MAINTAINER_pn-connman-conf = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-connman-gnome = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-console-tools = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-consolekit = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-core-image-base = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-dev = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-mtdutils = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-tiny-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-full-cmdline = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-kernel-dev = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-sato = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-sato-sdk = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-lsb = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-lsb-sdk = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-testmaster-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-testmaster = "', final=False):
         def decode(self, input, final=False):
    >        return codecs.ascii_decode(input, self.errors)[0]
     
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 2134: ordinal not in range(128)

ERROR: Error parsing configuration files
Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file(parentfn='/projects/jetson-warrior/layers/poky/meta/conf/distro/defaultsetup.conf', fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', lineno=5, data=<bb.data_smart.DataSmart object at 0x7fac76d4f518>, error_out=False):
         try:
    >        bb.parse.handle(fn, data, True)
         except (IOError, OSError) as exc:
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle(fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', data=<bb.data_smart.DataSmart object at 0x7fac76d4f518>, include=True):
                 with data.inchistory.include(fn):
    >                return h['handle'](fn, data, include)
         raise ParseError("not a BitBake file", fn)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 136, in handle(fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', d=<bb.data_smart.DataSmart object at 0x7fac76d4f518>, include=True):
         # actual loading
    >    statements = get_statements(fn, abs_fn, base_name)
     
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 97, in get_statements(filename='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', absolute_filename='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', base_name='maintainers.inc'):
                     lineno = lineno + 1
    >                s = f.readline()
                     if not s: break
  File "/usr/lib/python3.6/encodings/ascii.py", line 26, in IncrementalDecoder.decode(input=b'# Yocto Project / OpenEmbedded-Core (OE-Core) Maintainers File\n#\n# This file contains a list of recipe maintainers.\n#\n# Please submit any patches against recipes in meta to the \n# OE-Core mail list (openembedded-core@lists.openembedded.org)\n# For recipes in meta-yocto please use the Poky list (poky@yoctoproject.org)\n#\n# If you have problems with or questions about a particular recipe, feel\n# free to contact the maintainer directly (cc:ing the appropriate mailing list\n# puts it in the archive and helps other people who might have the same\n# questions in the future), but please try to do the following first:\n#\n#  - look in the Yocto Project Bugzilla\n#    (http://bugzilla.yoctoproject.org/) to see if a problem has\n#    already been reported\n#\n# - look through recent entries of the appropriate mailing list archives\n#   (http://lists.linuxtogo.org/pipermail/openembedded-core or\n#    https://lists.yoctoproject.org/pipermail/poky/) to see if other\n#   people have run into similar problems or had similar questions\n#   answered.\n#\n# The format is as a bitbake variable override for each recipe\n#\n#\tRECIPE_MAINTAINER_pn-<recipe name> = "Full Name <address@domain>"\n#\n# Please keep this list in alphabetical order.\n#\nRECIPE_MAINTAINER_pn-acl = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-acpica = "Fathi Boudra <fathi.boudra@linaro.org>"\nRECIPE_MAINTAINER_pn-acpid = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-adwaita-icon-theme = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-alsa-lib = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-plugins = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-state = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-tools = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-utils = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-utils-scripts = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-apmd = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-apr = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-apr-util = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-apt = "An\xc3\xadbal Lim\xc3\xb3n <limon.anibal@gmail.com>"\nRECIPE_MAINTAINER_pn-apt-native = "An\xc3\xadbal Lim\xc3\xb3n <limon.anibal@gmail.com>"\nRECIPE_MAINTAINER_pn-argp-standalone = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-asciidoc = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-aspell = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-assimp = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-at = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-at-spi2-atk = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-at-spi2-core = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-atk = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-attr = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-autoconf = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-autoconf-archive = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-automake = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-avahi = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-avahi-ui = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-babeltrace = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-base-files = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-base-passwd = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bash = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-bash-completion = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bc = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bind = "Armin Kuster <akuster808@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-cross-${TARGET_ARCH} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-cross-canadian-${TRANSLATED_TARGET_ARCH} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-crosssdk-${SDK_SYS} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-bison = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-bjam-native = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-blktool = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-blktrace = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bluez5 = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bmap-tools = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-boost = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bootchart2 = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bsd-headers = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-btrfs-tools = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-build-appliance-image = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-build-compare = "Paul Eggleton <paul.eggleton@linux.intel.com>"\nRECIPE_MAINTAINER_pn-build-sysroots = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-builder = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-buildtools-tarball = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-busybox = "Andrej Valek <andrej.valek@siemens.com>"\nRECIPE_MAINTAINER_pn-busybox-inittab = "Denys Dmytriyenko <denys@ti.com>"\nRECIPE_MAINTAINER_pn-bzip2 = "Denys Dmytriyenko <denys@ti.com>"\nRECIPE_MAINTAINER_pn-ca-certificates = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-cairo = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-cantarell-fonts = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-ccache = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-cdrtools-native = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chkconfig = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chkconfig-alternatives-native = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chrpath = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-clutter-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-clutter-gst-3.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-clutter-gtk-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-cmake = "Pascal Bach <pascal.bach@siemens.com>"\nRECIPE_MAINTAINER_pn-cmake-native = "Pascal Bach <pascal.bach@siemens.com>"\nRECIPE_MAINTAINER_pn-cogl-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-connman = "Changhyeok Bae <changhyeok.bae@gmail.com>"\nRECIPE_MAINTAINER_pn-connman-conf = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-connman-gnome = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-console-tools = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-consolekit = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-core-image-base = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-dev = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-mtdutils = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-tiny-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-full-cmdline = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-kernel-dev = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-sato = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-sato-sdk = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-lsb = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-lsb-sdk = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-testmaster-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-testmaster = "', final=False):
         def decode(self, input, final=False):
    >        return codecs.ascii_decode(input, self.errors)[0]
     
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 2134: ordinal not in range(128)

--- Starting bitbake server pid 1290 at 2019-05-16 01:44:36.024635 ---
[1;31mERROR[0m: [31mError parsing configuration files[0m
Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 89, in get_statements
    return cached_statements[absolute_filename]
KeyError: '/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 284, in parseBaseConfiguration
    self.data = self.parseConfigurationFiles(self.prefiles, self.postfiles)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 414, in parseConfigurationFiles
    data = parse_config_file(os.path.join("conf", "bitbake.conf"), data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 179, in wrapped
    return func(fn, *args)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 204, in parse_config_file
    return bb.parse.handle(fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 162, in handle
    statements.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 36, in eval
    statement.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 60, in eval
    bb.parse.ConfHandler.include(self.filename, s, self.lineno, data, False)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 83, in include
    include_single_file(parentfn, fn, lineno, data, error_out)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file
    bb.parse.handle(fn, data, True)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 162, in handle
    statements.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 36, in eval
    statement.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 60, in eval
    bb.parse.ConfHandler.include(self.filename, s, self.lineno, data, False)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 83, in include
    include_single_file(parentfn, fn, lineno, data, error_out)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file
    bb.parse.handle(fn, data, True)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 136, in handle
    statements = get_statements(fn, abs_fn, base_name)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 97, in get_statements
    s = f.readline()
  File "/usr/lib/python3.6/encodings/ascii.py", line 26, in decode
    return codecs.ascii_decode(input, self.errors)[0]
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 2134: ordinal not in range(128)
Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 89, in get_statements
    return cached_statements[absolute_filename]
KeyError: '/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 284, in parseBaseConfiguration
    self.data = self.parseConfigurationFiles(self.prefiles, self.postfiles)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 414, in parseConfigurationFiles
    data = parse_config_file(os.path.join("conf", "bitbake.conf"), data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 179, in wrapped
    return func(fn, *args)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 204, in parse_config_file
    return bb.parse.handle(fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 162, in handle
    statements.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 36, in eval
    statement.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 60, in eval
    bb.parse.ConfHandler.include(self.filename, s, self.lineno, data, False)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 83, in include
    include_single_file(parentfn, fn, lineno, data, error_out)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file
    bb.parse.handle(fn, data, True)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 162, in handle
    statements.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 36, in eval
    statement.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 60, in eval
    bb.parse.ConfHandler.include(self.filename, s, self.lineno, data, False)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 83, in include
    include_single_file(parentfn, fn, lineno, data, error_out)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file
    bb.parse.handle(fn, data, True)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 136, in handle
    statements = get_statements(fn, abs_fn, base_name)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 97, in get_statements
    s = f.readline()
  File "/usr/lib/python3.6/encodings/ascii.py", line 26, in decode
    return codecs.ascii_decode(input, self.errors)[0]
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 2134: ordinal not in range(128)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/daemonize.py", line 83, in createDaemon
    function()
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/server/process.py", line 469, in _startServer
    self.cooker = bb.cooker.BBCooker(self.configuration, self.featureset)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cooker.py", line 210, in __init__
    self.initConfigurationData()
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cooker.py", line 375, in initConfigurationData
    self.databuilder.parseBaseConfiguration()
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 323, in parseBaseConfiguration
    raise bb.BBHandledException
bb.BBHandledException
[1;31mERROR[0m: [31mError parsing configuration files[0m
Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file(parentfn='/projects/jetson-warrior/layers/poky/meta/conf/distro/defaultsetup.conf', fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', lineno=5, data=<bb.data_smart.DataSmart object at 0x7f6898298518>, error_out=False):
         try:
    >        bb.parse.handle(fn, data, True)
         except (IOError, OSError) as exc:
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle(fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', data=<bb.data_smart.DataSmart object at 0x7f6898298518>, include=True):
                 with data.inchistory.include(fn):
    >                return h['handle'](fn, data, include)
         raise ParseError("not a BitBake file", fn)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 136, in handle(fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', d=<bb.data_smart.DataSmart object at 0x7f6898298518>, include=True):
         # actual loading
    >    statements = get_statements(fn, abs_fn, base_name)
     
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 97, in get_statements(filename='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', absolute_filename='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', base_name='maintainers.inc'):
                     lineno = lineno + 1
    >                s = f.readline()
                     if not s: break
  File "/usr/lib/python3.6/encodings/ascii.py", line 26, in IncrementalDecoder.decode(input=b'# Yocto Project / OpenEmbedded-Core (OE-Core) Maintainers File\n#\n# This file contains a list of recipe maintainers.\n#\n# Please submit any patches against recipes in meta to the \n# OE-Core mail list (openembedded-core@lists.openembedded.org)\n# For recipes in meta-yocto please use the Poky list (poky@yoctoproject.org)\n#\n# If you have problems with or questions about a particular recipe, feel\n# free to contact the maintainer directly (cc:ing the appropriate mailing list\n# puts it in the archive and helps other people who might have the same\n# questions in the future), but please try to do the following first:\n#\n#  - look in the Yocto Project Bugzilla\n#    (http://bugzilla.yoctoproject.org/) to see if a problem has\n#    already been reported\n#\n# - look through recent entries of the appropriate mailing list archives\n#   (http://lists.linuxtogo.org/pipermail/openembedded-core or\n#    https://lists.yoctoproject.org/pipermail/poky/) to see if other\n#   people have run into similar problems or had similar questions\n#   answered.\n#\n# The format is as a bitbake variable override for each recipe\n#\n#\tRECIPE_MAINTAINER_pn-<recipe name> = "Full Name <address@domain>"\n#\n# Please keep this list in alphabetical order.\n#\nRECIPE_MAINTAINER_pn-acl = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-acpica = "Fathi Boudra <fathi.boudra@linaro.org>"\nRECIPE_MAINTAINER_pn-acpid = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-adwaita-icon-theme = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-alsa-lib = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-plugins = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-state = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-tools = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-utils = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-utils-scripts = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-apmd = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-apr = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-apr-util = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-apt = "An\xc3\xadbal Lim\xc3\xb3n <limon.anibal@gmail.com>"\nRECIPE_MAINTAINER_pn-apt-native = "An\xc3\xadbal Lim\xc3\xb3n <limon.anibal@gmail.com>"\nRECIPE_MAINTAINER_pn-argp-standalone = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-asciidoc = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-aspell = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-assimp = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-at = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-at-spi2-atk = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-at-spi2-core = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-atk = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-attr = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-autoconf = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-autoconf-archive = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-automake = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-avahi = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-avahi-ui = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-babeltrace = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-base-files = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-base-passwd = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bash = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-bash-completion = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bc = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bind = "Armin Kuster <akuster808@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-cross-${TARGET_ARCH} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-cross-canadian-${TRANSLATED_TARGET_ARCH} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-crosssdk-${SDK_SYS} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-bison = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-bjam-native = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-blktool = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-blktrace = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bluez5 = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bmap-tools = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-boost = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bootchart2 = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bsd-headers = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-btrfs-tools = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-build-appliance-image = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-build-compare = "Paul Eggleton <paul.eggleton@linux.intel.com>"\nRECIPE_MAINTAINER_pn-build-sysroots = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-builder = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-buildtools-tarball = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-busybox = "Andrej Valek <andrej.valek@siemens.com>"\nRECIPE_MAINTAINER_pn-busybox-inittab = "Denys Dmytriyenko <denys@ti.com>"\nRECIPE_MAINTAINER_pn-bzip2 = "Denys Dmytriyenko <denys@ti.com>"\nRECIPE_MAINTAINER_pn-ca-certificates = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-cairo = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-cantarell-fonts = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-ccache = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-cdrtools-native = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chkconfig = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chkconfig-alternatives-native = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chrpath = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-clutter-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-clutter-gst-3.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-clutter-gtk-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-cmake = "Pascal Bach <pascal.bach@siemens.com>"\nRECIPE_MAINTAINER_pn-cmake-native = "Pascal Bach <pascal.bach@siemens.com>"\nRECIPE_MAINTAINER_pn-cogl-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-connman = "Changhyeok Bae <changhyeok.bae@gmail.com>"\nRECIPE_MAINTAINER_pn-connman-conf = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-connman-gnome = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-console-tools = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-consolekit = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-core-image-base = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-dev = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-mtdutils = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-tiny-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-full-cmdline = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-kernel-dev = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-sato = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-sato-sdk = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-lsb = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-lsb-sdk = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-testmaster-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-testmaster = "', final=False):
         def decode(self, input, final=False):
    >        return codecs.ascii_decode(input, self.errors)[0]
     
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 2134: ordinal not in range(128)

ERROR: Error parsing configuration files
Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file(parentfn='/projects/jetson-warrior/layers/poky/meta/conf/distro/defaultsetup.conf', fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', lineno=5, data=<bb.data_smart.DataSmart object at 0x7f6898298518>, error_out=False):
         try:
    >        bb.parse.handle(fn, data, True)
         except (IOError, OSError) as exc:
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle(fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', data=<bb.data_smart.DataSmart object at 0x7f6898298518>, include=True):
                 with data.inchistory.include(fn):
    >                return h['handle'](fn, data, include)
         raise ParseError("not a BitBake file", fn)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 136, in handle(fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', d=<bb.data_smart.DataSmart object at 0x7f6898298518>, include=True):
         # actual loading
    >    statements = get_statements(fn, abs_fn, base_name)
     
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 97, in get_statements(filename='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', absolute_filename='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', base_name='maintainers.inc'):
                     lineno = lineno + 1
    >                s = f.readline()
                     if not s: break
  File "/usr/lib/python3.6/encodings/ascii.py", line 26, in IncrementalDecoder.decode(input=b'# Yocto Project / OpenEmbedded-Core (OE-Core) Maintainers File\n#\n# This file contains a list of recipe maintainers.\n#\n# Please submit any patches against recipes in meta to the \n# OE-Core mail list (openembedded-core@lists.openembedded.org)\n# For recipes in meta-yocto please use the Poky list (poky@yoctoproject.org)\n#\n# If you have problems with or questions about a particular recipe, feel\n# free to contact the maintainer directly (cc:ing the appropriate mailing list\n# puts it in the archive and helps other people who might have the same\n# questions in the future), but please try to do the following first:\n#\n#  - look in the Yocto Project Bugzilla\n#    (http://bugzilla.yoctoproject.org/) to see if a problem has\n#    already been reported\n#\n# - look through recent entries of the appropriate mailing list archives\n#   (http://lists.linuxtogo.org/pipermail/openembedded-core or\n#    https://lists.yoctoproject.org/pipermail/poky/) to see if other\n#   people have run into similar problems or had similar questions\n#   answered.\n#\n# The format is as a bitbake variable override for each recipe\n#\n#\tRECIPE_MAINTAINER_pn-<recipe name> = "Full Name <address@domain>"\n#\n# Please keep this list in alphabetical order.\n#\nRECIPE_MAINTAINER_pn-acl = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-acpica = "Fathi Boudra <fathi.boudra@linaro.org>"\nRECIPE_MAINTAINER_pn-acpid = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-adwaita-icon-theme = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-alsa-lib = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-plugins = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-state = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-tools = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-utils = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-utils-scripts = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-apmd = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-apr = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-apr-util = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-apt = "An\xc3\xadbal Lim\xc3\xb3n <limon.anibal@gmail.com>"\nRECIPE_MAINTAINER_pn-apt-native = "An\xc3\xadbal Lim\xc3\xb3n <limon.anibal@gmail.com>"\nRECIPE_MAINTAINER_pn-argp-standalone = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-asciidoc = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-aspell = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-assimp = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-at = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-at-spi2-atk = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-at-spi2-core = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-atk = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-attr = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-autoconf = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-autoconf-archive = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-automake = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-avahi = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-avahi-ui = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-babeltrace = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-base-files = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-base-passwd = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bash = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-bash-completion = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bc = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bind = "Armin Kuster <akuster808@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-cross-${TARGET_ARCH} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-cross-canadian-${TRANSLATED_TARGET_ARCH} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-crosssdk-${SDK_SYS} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-bison = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-bjam-native = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-blktool = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-blktrace = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bluez5 = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bmap-tools = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-boost = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bootchart2 = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bsd-headers = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-btrfs-tools = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-build-appliance-image = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-build-compare = "Paul Eggleton <paul.eggleton@linux.intel.com>"\nRECIPE_MAINTAINER_pn-build-sysroots = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-builder = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-buildtools-tarball = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-busybox = "Andrej Valek <andrej.valek@siemens.com>"\nRECIPE_MAINTAINER_pn-busybox-inittab = "Denys Dmytriyenko <denys@ti.com>"\nRECIPE_MAINTAINER_pn-bzip2 = "Denys Dmytriyenko <denys@ti.com>"\nRECIPE_MAINTAINER_pn-ca-certificates = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-cairo = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-cantarell-fonts = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-ccache = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-cdrtools-native = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chkconfig = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chkconfig-alternatives-native = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chrpath = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-clutter-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-clutter-gst-3.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-clutter-gtk-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-cmake = "Pascal Bach <pascal.bach@siemens.com>"\nRECIPE_MAINTAINER_pn-cmake-native = "Pascal Bach <pascal.bach@siemens.com>"\nRECIPE_MAINTAINER_pn-cogl-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-connman = "Changhyeok Bae <changhyeok.bae@gmail.com>"\nRECIPE_MAINTAINER_pn-connman-conf = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-connman-gnome = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-console-tools = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-consolekit = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-core-image-base = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-dev = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-mtdutils = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-tiny-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-full-cmdline = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-kernel-dev = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-sato = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-sato-sdk = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-lsb = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-lsb-sdk = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-testmaster-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-testmaster = "', final=False):
         def decode(self, input, final=False):
    >        return codecs.ascii_decode(input, self.errors)[0]
     
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 2134: ordinal not in range(128)

--- Starting bitbake server pid 2140 at 2019-05-16 01:46:23.892862 ---
[1;31mERROR[0m: [31mError parsing configuration files[0m
Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 89, in get_statements
    return cached_statements[absolute_filename]
KeyError: '/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 284, in parseBaseConfiguration
    self.data = self.parseConfigurationFiles(self.prefiles, self.postfiles)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 414, in parseConfigurationFiles
    data = parse_config_file(os.path.join("conf", "bitbake.conf"), data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 179, in wrapped
    return func(fn, *args)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 204, in parse_config_file
    return bb.parse.handle(fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 162, in handle
    statements.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 36, in eval
    statement.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 60, in eval
    bb.parse.ConfHandler.include(self.filename, s, self.lineno, data, False)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 83, in include
    include_single_file(parentfn, fn, lineno, data, error_out)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file
    bb.parse.handle(fn, data, True)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 162, in handle
    statements.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 36, in eval
    statement.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 60, in eval
    bb.parse.ConfHandler.include(self.filename, s, self.lineno, data, False)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 83, in include
    include_single_file(parentfn, fn, lineno, data, error_out)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file
    bb.parse.handle(fn, data, True)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 136, in handle
    statements = get_statements(fn, abs_fn, base_name)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 97, in get_statements
    s = f.readline()
  File "/usr/lib/python3.6/encodings/ascii.py", line 26, in decode
    return codecs.ascii_decode(input, self.errors)[0]
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 2134: ordinal not in range(128)
Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 89, in get_statements
    return cached_statements[absolute_filename]
KeyError: '/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 284, in parseBaseConfiguration
    self.data = self.parseConfigurationFiles(self.prefiles, self.postfiles)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 414, in parseConfigurationFiles
    data = parse_config_file(os.path.join("conf", "bitbake.conf"), data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 179, in wrapped
    return func(fn, *args)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 204, in parse_config_file
    return bb.parse.handle(fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 162, in handle
    statements.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 36, in eval
    statement.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 60, in eval
    bb.parse.ConfHandler.include(self.filename, s, self.lineno, data, False)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 83, in include
    include_single_file(parentfn, fn, lineno, data, error_out)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file
    bb.parse.handle(fn, data, True)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 162, in handle
    statements.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 36, in eval
    statement.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 60, in eval
    bb.parse.ConfHandler.include(self.filename, s, self.lineno, data, False)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 83, in include
    include_single_file(parentfn, fn, lineno, data, error_out)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file
    bb.parse.handle(fn, data, True)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 136, in handle
    statements = get_statements(fn, abs_fn, base_name)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 97, in get_statements
    s = f.readline()
  File "/usr/lib/python3.6/encodings/ascii.py", line 26, in decode
    return codecs.ascii_decode(input, self.errors)[0]
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 2134: ordinal not in range(128)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/daemonize.py", line 83, in createDaemon
    function()
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/server/process.py", line 469, in _startServer
    self.cooker = bb.cooker.BBCooker(self.configuration, self.featureset)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cooker.py", line 210, in __init__
    self.initConfigurationData()
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cooker.py", line 375, in initConfigurationData
    self.databuilder.parseBaseConfiguration()
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 323, in parseBaseConfiguration
    raise bb.BBHandledException
bb.BBHandledException
[1;31mERROR[0m: [31mError parsing configuration files[0m
Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file(parentfn='/projects/jetson-warrior/layers/poky/meta/conf/distro/defaultsetup.conf', fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', lineno=5, data=<bb.data_smart.DataSmart object at 0x7fa9cb877588>, error_out=False):
         try:
    >        bb.parse.handle(fn, data, True)
         except (IOError, OSError) as exc:
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle(fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', data=<bb.data_smart.DataSmart object at 0x7fa9cb877588>, include=True):
                 with data.inchistory.include(fn):
    >                return h['handle'](fn, data, include)
         raise ParseError("not a BitBake file", fn)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 136, in handle(fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', d=<bb.data_smart.DataSmart object at 0x7fa9cb877588>, include=True):
         # actual loading
    >    statements = get_statements(fn, abs_fn, base_name)
     
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 97, in get_statements(filename='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', absolute_filename='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', base_name='maintainers.inc'):
                     lineno = lineno + 1
    >                s = f.readline()
                     if not s: break
  File "/usr/lib/python3.6/encodings/ascii.py", line 26, in IncrementalDecoder.decode(input=b'# Yocto Project / OpenEmbedded-Core (OE-Core) Maintainers File\n#\n# This file contains a list of recipe maintainers.\n#\n# Please submit any patches against recipes in meta to the \n# OE-Core mail list (openembedded-core@lists.openembedded.org)\n# For recipes in meta-yocto please use the Poky list (poky@yoctoproject.org)\n#\n# If you have problems with or questions about a particular recipe, feel\n# free to contact the maintainer directly (cc:ing the appropriate mailing list\n# puts it in the archive and helps other people who might have the same\n# questions in the future), but please try to do the following first:\n#\n#  - look in the Yocto Project Bugzilla\n#    (http://bugzilla.yoctoproject.org/) to see if a problem has\n#    already been reported\n#\n# - look through recent entries of the appropriate mailing list archives\n#   (http://lists.linuxtogo.org/pipermail/openembedded-core or\n#    https://lists.yoctoproject.org/pipermail/poky/) to see if other\n#   people have run into similar problems or had similar questions\n#   answered.\n#\n# The format is as a bitbake variable override for each recipe\n#\n#\tRECIPE_MAINTAINER_pn-<recipe name> = "Full Name <address@domain>"\n#\n# Please keep this list in alphabetical order.\n#\nRECIPE_MAINTAINER_pn-acl = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-acpica = "Fathi Boudra <fathi.boudra@linaro.org>"\nRECIPE_MAINTAINER_pn-acpid = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-adwaita-icon-theme = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-alsa-lib = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-plugins = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-state = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-tools = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-utils = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-utils-scripts = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-apmd = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-apr = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-apr-util = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-apt = "An\xc3\xadbal Lim\xc3\xb3n <limon.anibal@gmail.com>"\nRECIPE_MAINTAINER_pn-apt-native = "An\xc3\xadbal Lim\xc3\xb3n <limon.anibal@gmail.com>"\nRECIPE_MAINTAINER_pn-argp-standalone = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-asciidoc = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-aspell = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-assimp = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-at = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-at-spi2-atk = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-at-spi2-core = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-atk = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-attr = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-autoconf = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-autoconf-archive = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-automake = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-avahi = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-avahi-ui = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-babeltrace = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-base-files = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-base-passwd = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bash = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-bash-completion = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bc = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bind = "Armin Kuster <akuster808@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-cross-${TARGET_ARCH} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-cross-canadian-${TRANSLATED_TARGET_ARCH} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-crosssdk-${SDK_SYS} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-bison = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-bjam-native = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-blktool = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-blktrace = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bluez5 = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bmap-tools = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-boost = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bootchart2 = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bsd-headers = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-btrfs-tools = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-build-appliance-image = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-build-compare = "Paul Eggleton <paul.eggleton@linux.intel.com>"\nRECIPE_MAINTAINER_pn-build-sysroots = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-builder = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-buildtools-tarball = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-busybox = "Andrej Valek <andrej.valek@siemens.com>"\nRECIPE_MAINTAINER_pn-busybox-inittab = "Denys Dmytriyenko <denys@ti.com>"\nRECIPE_MAINTAINER_pn-bzip2 = "Denys Dmytriyenko <denys@ti.com>"\nRECIPE_MAINTAINER_pn-ca-certificates = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-cairo = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-cantarell-fonts = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-ccache = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-cdrtools-native = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chkconfig = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chkconfig-alternatives-native = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chrpath = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-clutter-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-clutter-gst-3.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-clutter-gtk-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-cmake = "Pascal Bach <pascal.bach@siemens.com>"\nRECIPE_MAINTAINER_pn-cmake-native = "Pascal Bach <pascal.bach@siemens.com>"\nRECIPE_MAINTAINER_pn-cogl-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-connman = "Changhyeok Bae <changhyeok.bae@gmail.com>"\nRECIPE_MAINTAINER_pn-connman-conf = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-connman-gnome = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-console-tools = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-consolekit = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-core-image-base = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-dev = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-mtdutils = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-tiny-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-full-cmdline = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-kernel-dev = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-sato = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-sato-sdk = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-lsb = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-lsb-sdk = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-testmaster-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-testmaster = "', final=False):
         def decode(self, input, final=False):
    >        return codecs.ascii_decode(input, self.errors)[0]
     
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 2134: ordinal not in range(128)

ERROR: Error parsing configuration files
Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file(parentfn='/projects/jetson-warrior/layers/poky/meta/conf/distro/defaultsetup.conf', fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', lineno=5, data=<bb.data_smart.DataSmart object at 0x7fa9cb877588>, error_out=False):
         try:
    >        bb.parse.handle(fn, data, True)
         except (IOError, OSError) as exc:
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle(fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', data=<bb.data_smart.DataSmart object at 0x7fa9cb877588>, include=True):
                 with data.inchistory.include(fn):
    >                return h['handle'](fn, data, include)
         raise ParseError("not a BitBake file", fn)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 136, in handle(fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', d=<bb.data_smart.DataSmart object at 0x7fa9cb877588>, include=True):
         # actual loading
    >    statements = get_statements(fn, abs_fn, base_name)
     
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 97, in get_statements(filename='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', absolute_filename='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', base_name='maintainers.inc'):
                     lineno = lineno + 1
    >                s = f.readline()
                     if not s: break
  File "/usr/lib/python3.6/encodings/ascii.py", line 26, in IncrementalDecoder.decode(input=b'# Yocto Project / OpenEmbedded-Core (OE-Core) Maintainers File\n#\n# This file contains a list of recipe maintainers.\n#\n# Please submit any patches against recipes in meta to the \n# OE-Core mail list (openembedded-core@lists.openembedded.org)\n# For recipes in meta-yocto please use the Poky list (poky@yoctoproject.org)\n#\n# If you have problems with or questions about a particular recipe, feel\n# free to contact the maintainer directly (cc:ing the appropriate mailing list\n# puts it in the archive and helps other people who might have the same\n# questions in the future), but please try to do the following first:\n#\n#  - look in the Yocto Project Bugzilla\n#    (http://bugzilla.yoctoproject.org/) to see if a problem has\n#    already been reported\n#\n# - look through recent entries of the appropriate mailing list archives\n#   (http://lists.linuxtogo.org/pipermail/openembedded-core or\n#    https://lists.yoctoproject.org/pipermail/poky/) to see if other\n#   people have run into similar problems or had similar questions\n#   answered.\n#\n# The format is as a bitbake variable override for each recipe\n#\n#\tRECIPE_MAINTAINER_pn-<recipe name> = "Full Name <address@domain>"\n#\n# Please keep this list in alphabetical order.\n#\nRECIPE_MAINTAINER_pn-acl = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-acpica = "Fathi Boudra <fathi.boudra@linaro.org>"\nRECIPE_MAINTAINER_pn-acpid = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-adwaita-icon-theme = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-alsa-lib = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-plugins = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-state = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-tools = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-utils = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-utils-scripts = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-apmd = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-apr = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-apr-util = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-apt = "An\xc3\xadbal Lim\xc3\xb3n <limon.anibal@gmail.com>"\nRECIPE_MAINTAINER_pn-apt-native = "An\xc3\xadbal Lim\xc3\xb3n <limon.anibal@gmail.com>"\nRECIPE_MAINTAINER_pn-argp-standalone = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-asciidoc = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-aspell = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-assimp = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-at = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-at-spi2-atk = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-at-spi2-core = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-atk = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-attr = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-autoconf = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-autoconf-archive = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-automake = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-avahi = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-avahi-ui = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-babeltrace = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-base-files = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-base-passwd = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bash = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-bash-completion = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bc = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bind = "Armin Kuster <akuster808@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-cross-${TARGET_ARCH} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-cross-canadian-${TRANSLATED_TARGET_ARCH} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-crosssdk-${SDK_SYS} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-bison = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-bjam-native = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-blktool = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-blktrace = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bluez5 = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bmap-tools = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-boost = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bootchart2 = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bsd-headers = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-btrfs-tools = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-build-appliance-image = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-build-compare = "Paul Eggleton <paul.eggleton@linux.intel.com>"\nRECIPE_MAINTAINER_pn-build-sysroots = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-builder = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-buildtools-tarball = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-busybox = "Andrej Valek <andrej.valek@siemens.com>"\nRECIPE_MAINTAINER_pn-busybox-inittab = "Denys Dmytriyenko <denys@ti.com>"\nRECIPE_MAINTAINER_pn-bzip2 = "Denys Dmytriyenko <denys@ti.com>"\nRECIPE_MAINTAINER_pn-ca-certificates = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-cairo = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-cantarell-fonts = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-ccache = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-cdrtools-native = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chkconfig = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chkconfig-alternatives-native = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chrpath = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-clutter-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-clutter-gst-3.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-clutter-gtk-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-cmake = "Pascal Bach <pascal.bach@siemens.com>"\nRECIPE_MAINTAINER_pn-cmake-native = "Pascal Bach <pascal.bach@siemens.com>"\nRECIPE_MAINTAINER_pn-cogl-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-connman = "Changhyeok Bae <changhyeok.bae@gmail.com>"\nRECIPE_MAINTAINER_pn-connman-conf = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-connman-gnome = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-console-tools = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-consolekit = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-core-image-base = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-dev = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-mtdutils = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-tiny-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-full-cmdline = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-kernel-dev = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-sato = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-sato-sdk = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-lsb = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-lsb-sdk = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-testmaster-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-testmaster = "', final=False):
         def decode(self, input, final=False):
    >        return codecs.ascii_decode(input, self.errors)[0]
     
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 2134: ordinal not in range(128)

--- Starting bitbake server pid 2313 at 2019-05-16 01:53:14.728740 ---
[1;31mERROR[0m: [31mError parsing configuration files[0m
Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 89, in get_statements
    return cached_statements[absolute_filename]
KeyError: '/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 284, in parseBaseConfiguration
    self.data = self.parseConfigurationFiles(self.prefiles, self.postfiles)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 414, in parseConfigurationFiles
    data = parse_config_file(os.path.join("conf", "bitbake.conf"), data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 179, in wrapped
    return func(fn, *args)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 204, in parse_config_file
    return bb.parse.handle(fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 162, in handle
    statements.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 36, in eval
    statement.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 60, in eval
    bb.parse.ConfHandler.include(self.filename, s, self.lineno, data, False)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 83, in include
    include_single_file(parentfn, fn, lineno, data, error_out)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file
    bb.parse.handle(fn, data, True)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 162, in handle
    statements.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 36, in eval
    statement.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 60, in eval
    bb.parse.ConfHandler.include(self.filename, s, self.lineno, data, False)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 83, in include
    include_single_file(parentfn, fn, lineno, data, error_out)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file
    bb.parse.handle(fn, data, True)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 136, in handle
    statements = get_statements(fn, abs_fn, base_name)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 97, in get_statements
    s = f.readline()
  File "/usr/lib/python3.6/encodings/ascii.py", line 26, in decode
    return codecs.ascii_decode(input, self.errors)[0]
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 2134: ordinal not in range(128)
Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 89, in get_statements
    return cached_statements[absolute_filename]
KeyError: '/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 284, in parseBaseConfiguration
    self.data = self.parseConfigurationFiles(self.prefiles, self.postfiles)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 414, in parseConfigurationFiles
    data = parse_config_file(os.path.join("conf", "bitbake.conf"), data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 179, in wrapped
    return func(fn, *args)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 204, in parse_config_file
    return bb.parse.handle(fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 162, in handle
    statements.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 36, in eval
    statement.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 60, in eval
    bb.parse.ConfHandler.include(self.filename, s, self.lineno, data, False)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 83, in include
    include_single_file(parentfn, fn, lineno, data, error_out)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file
    bb.parse.handle(fn, data, True)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 162, in handle
    statements.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 36, in eval
    statement.eval(data)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/ast.py", line 60, in eval
    bb.parse.ConfHandler.include(self.filename, s, self.lineno, data, False)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 83, in include
    include_single_file(parentfn, fn, lineno, data, error_out)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file
    bb.parse.handle(fn, data, True)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle
    return h['handle'](fn, data, include)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 136, in handle
    statements = get_statements(fn, abs_fn, base_name)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 97, in get_statements
    s = f.readline()
  File "/usr/lib/python3.6/encodings/ascii.py", line 26, in decode
    return codecs.ascii_decode(input, self.errors)[0]
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 2134: ordinal not in range(128)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/daemonize.py", line 83, in createDaemon
    function()
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/server/process.py", line 469, in _startServer
    self.cooker = bb.cooker.BBCooker(self.configuration, self.featureset)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cooker.py", line 210, in __init__
    self.initConfigurationData()
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cooker.py", line 375, in initConfigurationData
    self.databuilder.parseBaseConfiguration()
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/cookerdata.py", line 323, in parseBaseConfiguration
    raise bb.BBHandledException
bb.BBHandledException
[1;31mERROR[0m: [31mError parsing configuration files[0m
Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file(parentfn='/projects/jetson-warrior/layers/poky/meta/conf/distro/defaultsetup.conf', fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', lineno=5, data=<bb.data_smart.DataSmart object at 0x7fd384103588>, error_out=False):
         try:
    >        bb.parse.handle(fn, data, True)
         except (IOError, OSError) as exc:
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle(fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', data=<bb.data_smart.DataSmart object at 0x7fd384103588>, include=True):
                 with data.inchistory.include(fn):
    >                return h['handle'](fn, data, include)
         raise ParseError("not a BitBake file", fn)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 136, in handle(fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', d=<bb.data_smart.DataSmart object at 0x7fd384103588>, include=True):
         # actual loading
    >    statements = get_statements(fn, abs_fn, base_name)
     
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 97, in get_statements(filename='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', absolute_filename='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', base_name='maintainers.inc'):
                     lineno = lineno + 1
    >                s = f.readline()
                     if not s: break
  File "/usr/lib/python3.6/encodings/ascii.py", line 26, in IncrementalDecoder.decode(input=b'# Yocto Project / OpenEmbedded-Core (OE-Core) Maintainers File\n#\n# This file contains a list of recipe maintainers.\n#\n# Please submit any patches against recipes in meta to the \n# OE-Core mail list (openembedded-core@lists.openembedded.org)\n# For recipes in meta-yocto please use the Poky list (poky@yoctoproject.org)\n#\n# If you have problems with or questions about a particular recipe, feel\n# free to contact the maintainer directly (cc:ing the appropriate mailing list\n# puts it in the archive and helps other people who might have the same\n# questions in the future), but please try to do the following first:\n#\n#  - look in the Yocto Project Bugzilla\n#    (http://bugzilla.yoctoproject.org/) to see if a problem has\n#    already been reported\n#\n# - look through recent entries of the appropriate mailing list archives\n#   (http://lists.linuxtogo.org/pipermail/openembedded-core or\n#    https://lists.yoctoproject.org/pipermail/poky/) to see if other\n#   people have run into similar problems or had similar questions\n#   answered.\n#\n# The format is as a bitbake variable override for each recipe\n#\n#\tRECIPE_MAINTAINER_pn-<recipe name> = "Full Name <address@domain>"\n#\n# Please keep this list in alphabetical order.\n#\nRECIPE_MAINTAINER_pn-acl = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-acpica = "Fathi Boudra <fathi.boudra@linaro.org>"\nRECIPE_MAINTAINER_pn-acpid = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-adwaita-icon-theme = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-alsa-lib = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-plugins = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-state = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-tools = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-utils = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-utils-scripts = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-apmd = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-apr = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-apr-util = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-apt = "An\xc3\xadbal Lim\xc3\xb3n <limon.anibal@gmail.com>"\nRECIPE_MAINTAINER_pn-apt-native = "An\xc3\xadbal Lim\xc3\xb3n <limon.anibal@gmail.com>"\nRECIPE_MAINTAINER_pn-argp-standalone = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-asciidoc = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-aspell = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-assimp = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-at = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-at-spi2-atk = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-at-spi2-core = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-atk = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-attr = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-autoconf = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-autoconf-archive = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-automake = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-avahi = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-avahi-ui = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-babeltrace = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-base-files = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-base-passwd = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bash = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-bash-completion = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bc = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bind = "Armin Kuster <akuster808@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-cross-${TARGET_ARCH} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-cross-canadian-${TRANSLATED_TARGET_ARCH} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-crosssdk-${SDK_SYS} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-bison = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-bjam-native = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-blktool = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-blktrace = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bluez5 = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bmap-tools = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-boost = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bootchart2 = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bsd-headers = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-btrfs-tools = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-build-appliance-image = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-build-compare = "Paul Eggleton <paul.eggleton@linux.intel.com>"\nRECIPE_MAINTAINER_pn-build-sysroots = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-builder = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-buildtools-tarball = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-busybox = "Andrej Valek <andrej.valek@siemens.com>"\nRECIPE_MAINTAINER_pn-busybox-inittab = "Denys Dmytriyenko <denys@ti.com>"\nRECIPE_MAINTAINER_pn-bzip2 = "Denys Dmytriyenko <denys@ti.com>"\nRECIPE_MAINTAINER_pn-ca-certificates = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-cairo = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-cantarell-fonts = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-ccache = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-cdrtools-native = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chkconfig = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chkconfig-alternatives-native = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chrpath = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-clutter-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-clutter-gst-3.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-clutter-gtk-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-cmake = "Pascal Bach <pascal.bach@siemens.com>"\nRECIPE_MAINTAINER_pn-cmake-native = "Pascal Bach <pascal.bach@siemens.com>"\nRECIPE_MAINTAINER_pn-cogl-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-connman = "Changhyeok Bae <changhyeok.bae@gmail.com>"\nRECIPE_MAINTAINER_pn-connman-conf = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-connman-gnome = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-console-tools = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-consolekit = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-core-image-base = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-dev = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-mtdutils = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-tiny-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-full-cmdline = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-kernel-dev = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-sato = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-sato-sdk = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-lsb = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-lsb-sdk = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-testmaster-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-testmaster = "', final=False):
         def decode(self, input, final=False):
    >        return codecs.ascii_decode(input, self.errors)[0]
     
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 2134: ordinal not in range(128)

ERROR: Error parsing configuration files
Traceback (most recent call last):
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/ConfHandler.py", line 106, in include_single_file(parentfn='/projects/jetson-warrior/layers/poky/meta/conf/distro/defaultsetup.conf', fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', lineno=5, data=<bb.data_smart.DataSmart object at 0x7fd384103588>, error_out=False):
         try:
    >        bb.parse.handle(fn, data, True)
         except (IOError, OSError) as exc:
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/__init__.py", line 117, in handle(fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', data=<bb.data_smart.DataSmart object at 0x7fd384103588>, include=True):
                 with data.inchistory.include(fn):
    >                return h['handle'](fn, data, include)
         raise ParseError("not a BitBake file", fn)
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 136, in handle(fn='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', d=<bb.data_smart.DataSmart object at 0x7fd384103588>, include=True):
         # actual loading
    >    statements = get_statements(fn, abs_fn, base_name)
     
  File "/projects/jetson-warrior/layers/poky/bitbake/lib/bb/parse/parse_py/BBHandler.py", line 97, in get_statements(filename='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', absolute_filename='/projects/jetson-warrior/layers/poky/meta/conf/distro/include/maintainers.inc', base_name='maintainers.inc'):
                     lineno = lineno + 1
    >                s = f.readline()
                     if not s: break
  File "/usr/lib/python3.6/encodings/ascii.py", line 26, in IncrementalDecoder.decode(input=b'# Yocto Project / OpenEmbedded-Core (OE-Core) Maintainers File\n#\n# This file contains a list of recipe maintainers.\n#\n# Please submit any patches against recipes in meta to the \n# OE-Core mail list (openembedded-core@lists.openembedded.org)\n# For recipes in meta-yocto please use the Poky list (poky@yoctoproject.org)\n#\n# If you have problems with or questions about a particular recipe, feel\n# free to contact the maintainer directly (cc:ing the appropriate mailing list\n# puts it in the archive and helps other people who might have the same\n# questions in the future), but please try to do the following first:\n#\n#  - look in the Yocto Project Bugzilla\n#    (http://bugzilla.yoctoproject.org/) to see if a problem has\n#    already been reported\n#\n# - look through recent entries of the appropriate mailing list archives\n#   (http://lists.linuxtogo.org/pipermail/openembedded-core or\n#    https://lists.yoctoproject.org/pipermail/poky/) to see if other\n#   people have run into similar problems or had similar questions\n#   answered.\n#\n# The format is as a bitbake variable override for each recipe\n#\n#\tRECIPE_MAINTAINER_pn-<recipe name> = "Full Name <address@domain>"\n#\n# Please keep this list in alphabetical order.\n#\nRECIPE_MAINTAINER_pn-acl = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-acpica = "Fathi Boudra <fathi.boudra@linaro.org>"\nRECIPE_MAINTAINER_pn-acpid = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-adwaita-icon-theme = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-alsa-lib = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-plugins = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-state = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-tools = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-utils = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-alsa-utils-scripts = "Tanu Kaskinen <tanuk@iki.fi>"\nRECIPE_MAINTAINER_pn-apmd = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-apr = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-apr-util = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-apt = "An\xc3\xadbal Lim\xc3\xb3n <limon.anibal@gmail.com>"\nRECIPE_MAINTAINER_pn-apt-native = "An\xc3\xadbal Lim\xc3\xb3n <limon.anibal@gmail.com>"\nRECIPE_MAINTAINER_pn-argp-standalone = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-asciidoc = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-aspell = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-assimp = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-at = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-at-spi2-atk = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-at-spi2-core = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-atk = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-attr = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-autoconf = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-autoconf-archive = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-automake = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-avahi = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-avahi-ui = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-babeltrace = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-base-files = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-base-passwd = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bash = "Hongxu Jia <hongxu.jia@windriver.com>"\nRECIPE_MAINTAINER_pn-bash-completion = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bc = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bind = "Armin Kuster <akuster808@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-cross-${TARGET_ARCH} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-cross-canadian-${TRANSLATED_TARGET_ARCH} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-binutils-crosssdk-${SDK_SYS} = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-bison = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-bjam-native = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-blktool = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-blktrace = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bluez5 = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-bmap-tools = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-boost = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bootchart2 = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-bsd-headers = "Khem Raj <raj.khem@gmail.com>"\nRECIPE_MAINTAINER_pn-btrfs-tools = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-build-appliance-image = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-build-compare = "Paul Eggleton <paul.eggleton@linux.intel.com>"\nRECIPE_MAINTAINER_pn-build-sysroots = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-builder = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-buildtools-tarball = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-busybox = "Andrej Valek <andrej.valek@siemens.com>"\nRECIPE_MAINTAINER_pn-busybox-inittab = "Denys Dmytriyenko <denys@ti.com>"\nRECIPE_MAINTAINER_pn-bzip2 = "Denys Dmytriyenko <denys@ti.com>"\nRECIPE_MAINTAINER_pn-ca-certificates = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-cairo = "Anuj Mittal <anuj.mittal@intel.com>"\nRECIPE_MAINTAINER_pn-cantarell-fonts = "Alexander Kanavin <alex.kanavin@gmail.com>"\nRECIPE_MAINTAINER_pn-ccache = "Robert Yang <liezhi.yang@windriver.com>"\nRECIPE_MAINTAINER_pn-cdrtools-native = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chkconfig = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chkconfig-alternatives-native = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-chrpath = "Yi Zhao <yi.zhao@windriver.com>"\nRECIPE_MAINTAINER_pn-clutter-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-clutter-gst-3.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-clutter-gtk-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-cmake = "Pascal Bach <pascal.bach@siemens.com>"\nRECIPE_MAINTAINER_pn-cmake-native = "Pascal Bach <pascal.bach@siemens.com>"\nRECIPE_MAINTAINER_pn-cogl-1.0 = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-connman = "Changhyeok Bae <changhyeok.bae@gmail.com>"\nRECIPE_MAINTAINER_pn-connman-conf = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-connman-gnome = "Ross Burton <ross.burton@intel.com>"\nRECIPE_MAINTAINER_pn-console-tools = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-consolekit = "Chen Qi <Qi.Chen@windriver.com>"\nRECIPE_MAINTAINER_pn-core-image-base = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-dev = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-minimal-mtdutils = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-tiny-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-full-cmdline = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-kernel-dev = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-sato = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-sato-sdk = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-lsb = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-lsb-sdk = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-testmaster-initramfs = "Richard Purdie <richard.purdie@linuxfoundation.org>"\nRECIPE_MAINTAINER_pn-core-image-testmaster = "', final=False):
         def decode(self, input, final=False):
    >        return codecs.ascii_decode(input, self.errors)[0]
     
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 2134: ordinal not in range(128)

